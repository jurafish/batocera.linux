name: TermEnv

on:
  repository_dispatch:
  workflow_dispatch:

env:
  TZ: Asia/Shanghai

jobs:
  build_base:
    name: Build Term Env
    runs-on: ubuntu-latest
    steps:
#      - name: Login to Docker Hub
#        uses: docker/login-action@v2.1.0
#        with:
#          username: ${{ secrets.DOCKER_HUB_USER_NAME }}
#          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
    
      - name: Checkout batocera.linux
        uses: actions/checkout@v3
      - name: Checkout Buildroot
        uses: actions/checkout@v3
        with:
          repository: jurafish/buildroot
          path: buildroot
          
      - name: Makedir DL
        run: |
          make dl-dir
          sudo chown -R runner:docker dl/
          df -h
      - name: Maximum Spare Space
        run: |
          sudo umount -l /mnt
          sudo mount /dev/sdb1 /tmp
          sudo chmod -R a+wr /tmp
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/*
          df -h
          
      - name: Init CCache
        run: |
          #wget -O dl-artifact.zip --header="Authorization: token ${{secrets.GITHUB_TOKEN}}" https://api.github.com/repos/jurafish/batocera.linux/actions/artifacts/434039499/zip
          #unzip dl-artifact.zip
          wget -O output-artifact.zip --header="Authorization: token ${{secrets.GITHUB_TOKEN}}" https://api.github.com/repos/jurafish/batocera.linux/actions/artifacts/434550122/zip
          unzip output-artifact.zip
          wget -O ccache-artifact.zip --header="Authorization: token ${{secrets.GITHUB_TOKEN}}" https://api.github.com/repos/jurafish/batocera.linux/actions/artifacts/434550120/zip
          unzip ccache-artifact.zip
          #tar xf dl.tar.gz
          tar xf output.tar.gz
          tar xf buildroot-ccache.tar.gz
          rm -f output-artifact.zip
          rm -f ccache-artifact.zip
          #rm -f dl.tar.gz
          rm -f output.tar.gz
          rm -f buildroot-ccache.tar.gz
          echo "START_TIME=$(date '+%s')" >> $GITHUB_ENV
          
      - name: Kill_Make Deamon
        run:  sleep $(expr 60 \* 60 \* 4 + ${START_TIME}  - $(date "+%s")) && ( killall make || true ) || ( test $? == 143 && echo sleep canceld ) &
          
#      - name: Setup Debug Session
#        uses: csexton/debugger-action@master        
        
#      - name: Start SSH via Ngrok
#        run: curl -sL https://gist.githubusercontent.com/retyui/7115bb6acf151351a143ec8f96a7c561/raw/7099b9db76729dc5761da72aa8525f632d8875c9/debug-github-actions.sh | bash
#        env:
#          # After sign up on the https://ngrok.com/
#          # You can find this token here: https://dashboard.ngrok.com/get-started/setup
#          NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }} 
#          # This password you will use when authorizing via SSH 
#          USER_PASS: ${{ secrets.USER_PASS }}          
          
      - name: Build
        run:  make s912-build
          
      - name: Tar Dl
        if: always()
        run: |
          tar czf dl.tar.gz dl/
          rm -rf dl/
          df -h

      - name: Upload Tar Dl
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: dl-artifact
          path: ./dl.tar.gz

      - name: Tar Output
        if: always()
        run: |
          rm -f dl.tar.gz
          tar czf output.tar.gz output/
          rm -rf output/
          df -h
      
      - name: Upload Tar Output
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: output-artifact
          path: ./output.tar.gz
      
      - name: Tar Ccache
        if: always()
        run: |
          rm -f output.tar.gz
          tar czf buildroot-ccache.tar.gz buildroot-ccache/
          df -h

      - name: Upload Tar Ccache
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ccache-artifact
          path: ./buildroot-ccache.tar.gz

#      - name: Start SSH via Ngrok
#        run: curl -sL https://gist.githubusercontent.com/retyui/7115bb6acf151351a143ec8f96a7c561/raw/7099b9db76729dc5761da72aa8525f632d8875c9/debug-github-actions.sh | bash
#        env:
#          # After sign up on the https://ngrok.com/
#          # You can find this token here: https://dashboard.ngrok.com/get-started/setup
#          NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }} 
#          # This password you will use when authorizing via SSH 
#          USER_PASS: ${{ secrets.USER_PASS }}          
        
#      - name: Setup Debug Session
#        uses: P3TERX/debugger-action@master

#      - name: Setup tmate session
#        uses: mxschmitt/action-tmate@v3
